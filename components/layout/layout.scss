@import "../../scss/variables";
@import "../../scss/mixins";
@import "../../scss/functions";
@import "mixins";
/* TO DO!!!!!!!!!!!!!: Turn navbar to shrinking and expanding flex box column/row 
- Make skill table responsive!
*/
html {
  height: 100%;
}
@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto/Roboto-Light.ttf") format("truetype");
  font-weight: 300;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto/Roboto-Regular.ttf") format("truetype");
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto/Roboto-Medium.ttf") format("truetype");
  font-weight: 500;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto/Roboto-Bold.ttf") format("truetype");
  font-weight: 700;
  font-display: swap;
}

body {
  font-family: "Roboto", sans-serif;
  margin: 0;
  background-color: $light-shade;
  color: $dark-shade;
}

.hero-tabs {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  text-align: center;
  padding: 0;
  #title {
    color: $light-shade;
  }
  h1,
  .slide-header h2 {
    font-size: 2em;
    margin: 0;
    z-index: 1;
    letter-spacing: 0.2rem;
    text-transform: uppercase;
  }
  h3 {
    z-index: 1;
    font-size: 1em;
  }
  &#home {
    min-height: 100vh;

    & > .content {
      background: $black-shade;
      height: 100%;
      z-index: 1;
      width: 100%;
      margin-top: -100vh;
      box-shadow: 0 4px 0.5px 0px $main-color;
      h1 {
        padding-top: 105vh;
      }
      @media (min-height: 568px) {
        @include prefixer(transform, (skew(0deg, -10deg)));
        * {
          @include prefixer(transform, (skew(0deg, 10deg) translateY(-10vh)));
        }
      }

      color: $main-color;

      h3 {
        margin-left: 20px;
        margin-right: 20px;
        letter-spacing: 0.2rem;
      }
    }
    &:before {
      content: "";
      z-index: -10;
      position: absolute;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0);
    }
  }
}
.slide {
  @extend .hero-tabs;
  padding: 0;
  justify-content: initial;
  width: 100%;

  .slide-header {
    color: $dark-shade;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 80%;
    font-size: 1em;
    padding-bottom: 2em;
  }
  .underline {
    margin-top: 1.5em;
    border-top: 3px dotted $main-color;
    width: 50%;
  }
  .slide-content {
    max-width: 80%;
    margin-top: 20px;
    text-align: center;
  }
}

.hero-tabs-container {
  display: grid;
  z-index: 10;
  color: $dark-shade;
  .active-section {
    color: $main-color;
  }

  & .hero-tab:hover {
    color: $main-color;
    font-weight: bold;
  }

  &.bottom {
    left: 2em;
    grid-template-columns: repeat(5, 1fr);
    position: absolute;
    bottom: 1em;
    top: initial;
    max-height: 44px;

    //No animation in initial render and mobile
    &.bottom-initial {
      left: 0;
      width: 100%;
    }
    @media screen and (max-width: 799px) {
      left: 0;
      width: 100%;
    }
    & .et-hero-tab:active span svg {
      display: none;
    }

    @each $menu-item in $menu-items {
      & .link-#{$menu-item}:active span:after {
        text-transform: uppercase;
        content: $menu-item;
      }
    }
    @media screen and (min-width: 800px) {
      &.bottom-transition {
        @include prefixer(animation, expandBottom 0.6s ease 1 normal forwards);
      }
      @for $i from 1 through length($menu-items) {
        $menuItem: nth($menu-items, $i);
        .link-#{$menuItem} {
          // loops through menu item array to set the active tab slider

          @include prefixer(
            animation,
            expandBottomItems 0.6s ease 1 normal forwards
          );
        }
      }
    }

    & .hero-tab:hover span svg {
      display: none;
    }

    @each $menu-item in $menu-items {
      & .link-#{$menu-item}:hover span:after {
        text-transform: uppercase;
        content: $menu-item;
      }
    }
  }

  &.left-transition {
    color: $dark-accent;
    & .hero-tab:hover {
      color: $main-color;
    }
    @media screen and (min-width: 800px) {
      grid-template-rows: repeat(5, 1fr);
      position: fixed;
      left: 2em;
      @include prefixer(animation, shrinkBottom 0.8s ease 1 normal);
      @for $i from 1 through length($menu-items) {
        $menuItem: nth($menu-items, $i);
        .link-#{$menuItem} {
          // loops through menu item array to set the active tab slider
          @include keyframesLeft(expandLeftItems#{$i}, $i - 1);
          @include prefixer(
            animation,
            expandLeftItems#{$i} 0.8s ease 1 normal forwards
          );
        }
      }
      height: 100%;
    }
    @media screen and (max-width: 799px) {
      left: 2em;

      grid-template-columns: repeat(5, 1fr);
      position: fixed;
      top: 0;
      bottom: initial;
      padding: 1em 0em 1em 0em;
      background-color: #{$dark-shade};
      border-bottom: 2px solid $main-color;
      max-height: 44px;
      color: $light-shade;
      z-index: 20;
      width: 100%;
      left: 0;
    }
  }
  @media screen and (min-width: 800px) {
    .mobile {
      display: none;
    }
  }
  @media screen and (max-width: 799px) {
    .browser {
      display: none;
    }
  }
}

.hero-tab {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  cursor: pointer;
}

@media (min-width: 800px) {
  .hero-tabs,
  .slide {
    h1 {
      font-size: 3em;
    }
    .slide-header h2 {
      font-size: 2.5em;
    }
    h3 {
      font-size: 1em;
    }
  }
  .hero-tab {
    font-size: 1.2em;
  }
}

@include keyframes(expandBottom) {
  from {
    width: 0;
    bottom: 0;
  }
  to {
    width: 100%;
    left: 0;
  }
}
@include keyframes(expandBottomItems) {
  to {
    left: 0;
  }
}

// shrink bottom navbar when passed the home page
@include keyframes(shrinkBottom) {
  0% {
    grid-template-columns: repeat(5, 1fr);
    width: 100%;
    left: 0;
  }
  23% {
    grid-template-columns: repeat(5, 1fr);
    left: 2em;
  }
  49% {
    grid-template-columns: repeat(5, 1fr);

    width: 0%;
    left: 2em;
  }
  50% {
    grid-template-rows: repeat(5, 1fr);
  }
}
// expand left items after shrinkBottom ^^^
