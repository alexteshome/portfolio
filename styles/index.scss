@use "sass:math";
@import "variables";
@import "mixins";
@import "functions";

/* TO DO!!!!!!!!!!!!!: Turn navbar to shrinking and expanding flex box column/row 
- Make skill table responsive!
*/
html {
  height: 100%;
}
@font-face {
  font-family: "Raleway";
  src: url("/fonts/Raleway/Raleway-Light.ttf") format("truetype");
  font-weight: 300;
  font-display: swap;
}
@font-face {
  font-family: "Raleway";
  src: url("/fonts/Raleway/Raleway-Regular.ttf") format("truetype");
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "OpenSans";
  src: url("/fonts/OpenSans/OpenSans-Regular.ttf") format("truetype");
  font-weight: 400;
  font-display: swap;
}

body {
  font-family: "Open Sans", sans-serif;
  h1,
  h2,
  h3,
  h4 {
    font-family: "Raleway", sans-serif;
  }
  margin: 0;
  background-color: $light-shade;
  color: $dark-shade;
}

.hero-tabs {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  text-align: center;
  padding: 0;
  #title {
    color: $light-shade;
  }
  h1,
  .slide-header h2 {
    font-size: 2em;
    margin: 0;
    z-index: 1;
    text-transform: uppercase;
  }
  h3 {
    z-index: 1;
    font-size: 1em;
  }
  &#home {
    min-height: 100vh;

    & > .content {
      background: $black-shade;
      height: 100%;
      z-index: 1;
      width: 100%;
      margin-top: -100vh;
      box-shadow: 0 4px 0.5px 0px $main-color;
      h1 {
        padding-top: 105vh;
        letter-spacing: 0.05em;
      }
      @media (min-height: 568px) {
        @include prefixer(transform, (skew(0deg, -10deg)));
        * {
          @include prefixer(transform, (skew(0deg, 10deg) translateY(-10vh)));
        }
      }

      color: $main-color;

      h3 {
        margin-left: 20px;
        margin-right: 20px;
        letter-spacing: 0.15rem;
      }
    }
    &:before {
      content: "";
      z-index: -10;
      position: absolute;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0);
    }
  }
}
.slide {
  @extend .hero-tabs;
  padding: 0;
  justify-content: initial;
  width: 100%;

  .slide-header {
    color: $dark-shade;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 80%;
    font-size: 1em;
    padding-bottom: 2em;
  }
  .underline {
    margin-top: 1.5em;
    border-top: 3px dotted $main-color;
    width: 50%;
  }
  .slide-content {
    max-width: 80%;
    margin-top: 20px;
    text-align: center;
  }
}

.hero-tabs-container {
  display: grid;
  z-index: 10;
  color: $dark-shade;
  .active-section {
    color: $main-color;
  }

  &.bottom {
    left: 2em;
    grid-template-columns: repeat(5, 1fr);
    position: absolute;
    bottom: 1em;
    top: initial;
    max-height: 44px;

    //No animation in initial render and mobile
    &.bottom-initial {
      left: 0;
      width: 100%;
    }

    @media screen and (max-width: 799px) {
      grid-template-columns: repeat(5, auto);
      left: 0;
      width: 100%;
      font-weight: 500;
      letter-spacing: -1px;
      & .hero-tab span svg {
        display: none;
      }
      @each $menu-item in $menu-items {
        & .link-#{$menu-item} span:after {
          text-transform: uppercase;
          content: $menu-item;
        }
      }
    }
    @media screen and (min-width: 800px) {
      & .hero-tab:hover {
        color: $main-color;
        font-weight: bold;
      }

      & .hero-tab:active span svg {
        display: none;
      }

      & .hero-tab:hover span svg {
        display: none;
      }

      @each $menu-item in $menu-items {
        & .link-#{$menu-item}:hover span:after {
          text-transform: uppercase;
          content: $menu-item;
        }
      }
      &.bottom-transition {
        @include prefixer(animation, expandBottom 0.6s ease 1 normal forwards);
      }
      @for $i from 1 through length($menu-items) {
        $menuItem: nth($menu-items, $i);
        .link-#{$menuItem} {
          // loops through menu item array to set the active tab slider

          @include prefixer(
            animation,
            expandBottomItems 0.6s ease 1 normal forwards
          );
        }
      }
    }
  }

  &.left-transition {
    color: $dark-accent;

    @media screen and (min-width: 800px) {
      & .hero-tab:hover {
        color: $main-color;
      }
      grid-template-rows: repeat(5, 1fr);
      position: fixed;
      left: 2em;
      @include prefixer(animation, shrinkBottom 0.8s ease 1 normal);
      @for $i from 1 through length($menu-items) {
        $menuItem: nth($menu-items, $i);
        .link-#{$menuItem} {
          // loops through menu item array to set the active tab slider
          @include keyframesLeft(expandLeftItems#{$i}, $i - 1);
          @include prefixer(
            animation,
            expandLeftItems#{$i} 0.8s ease 1 normal forwards
          );
        }
      }
      height: 100%;
    }
    @media screen and (max-width: 799px) {
      left: 2em;
      grid-template-columns: repeat(5, auto);
      position: fixed;
      top: 0;
      bottom: initial;
      padding: 1em 0em 1em 0em;
      background-color: #{$black-shade};
      border-bottom: 2px solid $main-color;
      max-height: 44px;
      color: $light-shade;
      z-index: 20;
      width: 100%;
      left: 0;
      font-size: 1em;
      letter-spacing: -1px;
      & .hero-tab span svg {
        display: none;
      }
      @each $menu-item in $menu-items {
        & .link-#{$menu-item} span:after {
          text-transform: uppercase;
          content: $menu-item;
        }
      }
    }
  }
  @media screen and (min-width: 800px) {
    .mobile {
      display: none;
    }
  }
  @media screen and (max-width: 799px) {
    .browser {
      display: none;
    }
  }
}

.hero-tab {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  cursor: pointer;
}

@media (min-width: 800px) {
  .hero-tabs,
  .slide {
    h1 {
      font-size: 3em;
    }
    .slide-header h2 {
      font-size: 2.5em;
    }
    h3 {
      font-size: 1em;
    }
  }
  .hero-tab {
    font-size: 1.2em;
  }
}

@include keyframes(expandBottom) {
  from {
    width: 0;
    bottom: 0;
  }
  to {
    width: 100%;
    left: 0;
  }
}
@include keyframes(expandBottomItems) {
  to {
    left: 0;
  }
}

// shrink bottom navbar when passed the home page
@include keyframes(shrinkBottom) {
  0% {
    grid-template-columns: repeat(5, 1fr);
    width: 100%;
    left: 0;
  }
  23% {
    grid-template-columns: repeat(5, 1fr);
    left: 2em;
  }
  49% {
    grid-template-columns: repeat(5, 1fr);

    width: 0%;
    left: 2em;
  }
  50% {
    grid-template-rows: repeat(5, 1fr);
  }
}
// expand left items after shrinkBottom ^^^




#skills {
  @include prefixer(
    background,
    linear-gradient(180deg, $light-shade 25%, $black-shade 25%)
  );
  border-bottom: $border-width solid $main-color;
  .skills-table {
    margin: 20px;
    padding: 10px;

    background-color: rgba(0, 0, 0, 0);
    max-width: 750px;
    text-align: center;
    line-height: 1.6;
    &.skills-table-main {
      background-color: rgba(0, 0, 0, 0);
    }

    .skill-logo {
      position: absolute;
    }
    .skill-logo > img {
      width: 75%;
      height: 100%;
    }
    .skills-main-stack {
      width: 100%;
      min-height: 20vw;
      margin: 2vw 0vw 4vw 0vw;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      border-radius: 50%;
      color: $dark-accent;
      transform: translate3d(0, 0, 0);
      -webkit-transform: translate3d(0, 0, 0);
      @media screen and (max-width: 499px) {
        display: none;
      }
      @for $i from 1 through length($main-stack) {
        $logo: nth($main-stack, $i);
        $orbitAngle: ($i - 1) * 0deg;
        $seconds: 10 - math.div($i, 3) + $i * 1s;

        ##{$logo}-orbit.orbit-container {
          position: absolute;
          width: 100%;
          height: 100%;
          transform: rotateX(70deg) rotateY($orbitAngle);
          transform-style: preserve-3d;
          @include prefixer(
            animation,
            #{$logo}-zIndex $seconds linear infinite
          );
          .skill-logo {
            @if $logo == "mongodb" {
              transform: scale(2);
            } @else if $logo == "nodejs" {
              transform: scale(1.3);
            } @else if $logo == "css3" {
              transform: scale(0.8);
            }
          }
          @if ($i == 1) {
            h2 {
              @include h2AndLogo(3em);
              transform: rotateX(-70deg);
              font-size: 1em;
              color: $light-accent;
            }
          } @else {
            h2 {
              display: none;
            }
          }

          .orbit {
            position: absolute;
            top: 50%;
            left: 50%;
            border: 1.5px solid $main-color;
            border-radius: 50%;

            transform-style: preserve-3d;
            animation-iteration-count: infinite;
            animation-timing-function: linear;
          }

          @media screen and (min-width: 1250px) {
            @include orbitSize($logo, $i, $seconds, 4vw);
            .skill-logo {
              @include h2AndLogo(4em);
            }
            h2 {
              font-size: 1.5em;
            }
          }
          @media screen and (min-width: 800px) and (max-width: 1249px) {
            @include orbitSize($logo, $i, $seconds, 4vw);
            .skill-logo {
              @include h2AndLogo(3em);
            }
          }
          @media screen and (min-width: 500px) and (max-width: 799px) {
            @include orbitSize($logo, $i, $seconds, 4vw);
            .skill-logo {
              @include h2AndLogo(2em);
            }
          }
          @media screen and (max-width: 499px) {
            @include orbitSize($logo, $i, $seconds, 4vw);

            .skill-logo {
              @include h2AndLogo(1.5em);
            }
            h2 {
              font-size: 0.75em;
            }
          }

          ##{$logo} .skill-logo {
            left: 0%;
            top: 50%;
          }
          ##{$logo} .pos {
            animation-name: #{$logo}-invert;
            animation-duration: $seconds;
          }
          .pos {
            left: 50%;
            top: -1px;
            position: absolute;
            transform-style: preserve-3d;

            animation-iteration-count: infinite;
            animation-timing-function: linear;
          }

          @include keyframes(#{$logo}-orbit) {
            0% {
              @if $i % 2 == 0 {
                transform: rotateZ(90deg);
              } @else {
                transform: rotateZ(-90deg);
              }
            }
            100% {
              @if $i % 2 == 0 {
                transform: rotateZ(-270deg);
              } @else {
                transform: rotateZ(-450deg);
              }
            }
          }
          @include keyframes(#{$logo}-invert) {
            0% {
              $direction: 270deg;
              @if $i % 2 == 0 {
                $direction: 450deg;
              }
              transform: rotateX(-90deg) rotateY($direction)
                rotateZ(-$orbitAngle);
            }
            25% {
              $direction: 180deg;
              $scale: 1.15;
              @if $i % 2 == 0 {
                $direction: 360deg;
                $scale: 0.85;
              }
              transform: rotateX(-90deg) rotateY($direction)
                rotateZ(-$orbitAngle) scale($scale +  math.div($i, 50));
            }

            50% {
              $direction: 90deg;
              @if $i % 2 == 0 {
                $direction: 270deg;
              }
              transform: rotateX(-90deg) rotateY($direction)
                rotateZ(-$orbitAngle);
            }
            75% {
              $direction: 0deg;
              $scale: 0.85;

              @if $i % 2 == 0 {
                $direction: 180deg;
                $scale: 1.15;
              }
              transform: rotateX(-90deg) rotateY($direction)
                rotateZ(-$orbitAngle) scale($scale +  math.div($i, 50));
            }
            100% {
              $direction: -90deg;
              @if $i % 2 == 0 {
                $direction: 90deg;
              }
              transform: rotateX(-90deg) rotateY($direction)
                rotateZ(-$orbitAngle);
            }
          }
          @include keyframes(#{$logo}-zIndex) {
            0% {
              @if $i % 2 == 0 {
                z-index: 10 - $i;
              } @else {
                z-index: 10 + $i;
              }
            }
            49.9% {
              @if $i % 2 == 0 {
                z-index: 10 - $i;
              } @else {
                z-index: 10 + $i;
              }
            }
            50% {
              @if $i % 2 == 0 {
                z-index: 10 + $i;
              } @else {
                z-index: 10 - $i;
              }
            }
            99.9% {
              @if $i % 2 == 0 {
                z-index: 10 + $i;
              } @else {
                z-index: 10 - $i;
              }
            }
            100% {
              @if $i % 2 == 0 {
                z-index: 10 - $i;
              } @else {
                z-index: 10 + $i;
              }
            }
          }
        }
      }
    }
    .skills-other-tech {
      color: $dark-accent;
      height: 100%;
      h2 {
        font-size: 2em;
      }
      @for $i from 1 through length($other-tech) {
        $logo: nth($other-tech, $i);

        $randomNumber-x: 15s - (math.div($i, 1.3) + math.div($i, 3));
        $randomNumber-y: math.div($i, 1.3) + math.div($i, 3) + 3s;
        ##{$logo}-x {
          animation: #{$logo}-x-initial math.div($randomNumber-x, 2) linear,
            #{$logo}-x $randomNumber-x linear math.div($randomNumber-x, 2) infinite;
          left: 50%;
          top: 50%;
          margin-top: -30px;
          margin-left: -30px;
          transform: translateX();
          transition: top 1s;
        }

        ##{$logo}-y {
          animation: y-initial math.div($randomNumber-y, 2) linear,
            y $randomNumber-y linear math.div($randomNumber-y, 2) infinite;
          position: absolute;
        }
        @include keyframes(y-initial) {
          to {
            transform: translateY(-205px);
          }
        }
        @include keyframes(y) {
          0% {
            transform: translateY(-205px);
          }
          100% {
            transform: translateY(265px);
          }
        }
        @media (min-width: 800px) {
          @include keyframes(#{$logo}-x-initial) {
            to {
              transform: translateX(-370px);
            }
          }
          @include keyframes(#{$logo}-x) {
            0% {
              transform: translateX(-370px);
            }
            100% {
              transform: translateX(310px);
            }
          }
        }
        @media screen and (min-width: 500px) and (max-width: 799px) {
          @include keyframes(#{$logo}-x-initial) {
            to {
              transform: translateX(-41.5vw);
            }
          }
          @include keyframes(#{$logo}-x) {
            0% {
              transform: translateX(-45vw);
            }
            100% {
              transform: translateX(30vw);
            }
          }
        }
        @media screen and (max-width: 499px) {
          @include keyframes(y-initial) {
            to {
              transform: translateY(-265px);
            }
          }
          @include keyframes(y) {
            0% {
              transform: translateY(-265px);
            }
            100% {
              transform: translateY(205px);
            }
          }
          @include keyframes(#{$logo}-x-initial) {
            to {
              transform: translateX(-39vw);
            }
          }
          @include keyframes(#{$logo}-x) {
            0% {
              transform: translateX(-39vw);
            }
            100% {
              transform: translateX(22vw);
            }
          }
        }
      }
    }
    &.skills-table-other {
      background-color: $black-shade;
      border-radius: 20px;
      box-shadow: 0 0 20px -5px black;
      height: 100%;
      @media screen and (max-width: 594px) {
        .skills-divider-vertical {
          display: none;
        }
        height: auto;
      }
      @media screen and (min-width: 556px) {
        .skills-divider-horizontal {
          display: none;
        }
      }
      .skills-details {
        background-color: inherit;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        height: 100%;
        color: $dark-shade;
        .skills-divider-vertical {
          background-color: $dark-shade;
          height: auto;
          margin: 1em 0;
          width: 2px;
        }
        .skills-divider-horizontal {
          background-color: $main-color;
          margin: 10px 0px 20px 0px;
          width: 100%;
          height: 2px;
        }
        .skills-section {
          background-color: inherit;
          display: flex;
          flex-direction: column;
          align-items: center;
          flex: 1 0;
          margin: 1em 2em;
        }
        .title-icon {
          font-size: 2em;
          color: $light-accent;
        }
        h3 {
          font-size: 1.4em;
          font-weight: bolder;
          color: $main-color;
          margin-top: 0.3em;
          margin-bottom: 0;
        }
        h4 {
          font-weight: bolder;
          color: $dark-accent;
          margin-bottom: 0;
        }
        p {
          font-size: 0.85em;
          color: $light-accent;
        }
      }
    }
  }
}
